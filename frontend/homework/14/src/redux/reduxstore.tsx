import { configureStore, createSlice, PayloadAction } from "@reduxjs/toolkit";

/** Interface for an item in the list */
export interface Item {
  id: number;
  text: string;
  isCompleted: number;
}

/** Interface for the state of the items list */
interface ItemsListState {
  list: Item[];
  searchList: Item[];
  searchInput: string;
}

/** Initial state for the items list */
const initialState: ItemsListState = {
  list: [],
  searchList: [],
  searchInput: ""
}

/** Slice for managing items list state */
const itemsListSlice = createSlice({
  name: "itemList",
  initialState,
  reducers: {
    setList: (state, action: PayloadAction<Item[]>) => {
      state.list = action.payload;
    },
    setSearchList: (state, action: PayloadAction<Item[]>) => {
      state.searchList = action.payload;
    },
    setSearchInput: (state, action: PayloadAction<string>) => {
      state.searchInput = action.payload;
    },
  }
});

/** Actions generated by the itemsListSlice */
export const { setList, setSearchList, setSearchInput } = itemsListSlice.actions;

/** Reducer function for the items list slice */
export const itemsListReducer = itemsListSlice.reducer;

/** Create the Redux store */
export const store = configureStore({
  reducer: {
    itemList: itemsListReducer
  }
});

/** Type for the root state of the Redux store */
export type RootState = ReturnType<typeof store.getState>;
